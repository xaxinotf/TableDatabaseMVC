@model TableDatabaseMVC.Models.Table

@{
    ViewData["Title"] = "Create Table";
}

<h1>Create New Table</h1>

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label asp-for="Name" class="form-label">Table Name</label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <h4>Columns</h4>
    <div id="columns">
        <div class="row mb-3">
            <div class="col">
                <input type="text" name="Columns[0].Name" class="form-control" placeholder="Column Name" required />
            </div>
            <div class="col">
                <select name="Columns[0].Type" class="form-select" required>
                    <option value="">Select Type</option>
                    <option value="integer">Integer</option>
                    <option value="real">Real</option>
                    <option value="char">Char</option>
                    <option value="string">String</option>
                    <option value="$">Currency ($)</option>
                    <option value="$Invl">Interval ($Invl)</option>
                </select>
            </div>
            <div class="col">
                <button type="button" class="btn btn-secondary" onclick="removeColumn(this)">Remove</button>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-secondary mb-3" onclick="addColumn()">Add Column</button>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let columnIndex = 1;

        function addColumn() {
            const columnsDiv = document.getElementById('columns');
            const newRow = document.createElement('div');
            newRow.classList.add('row', 'mb-3');
            newRow.innerHTML = `
                <div class="col">
                    <input type="text" name="Columns[${columnIndex}].Name" class="form-control" placeholder="Column Name" required />
                </div>
                <div class="col">
                    <select name="Columns[${columnIndex}].Type" class="form-select" required>
                        <option value="">Select Type</option>
                        <option value="integer">Integer</option>
                        <option value="real">Real</option>
                        <option value="char">Char</option>
                        <option value="string">String</option>
                        <option value="$">Currency ($)</option>
                        <option value="$Invl">Interval ($Invl)</option>
                    </select>
                </div>
                <div class="col">
                    <button type="button" class="btn btn-secondary" onclick="removeColumn(this)">Remove</button>
                </div>
            `;
            columnsDiv.appendChild(newRow);
            columnIndex++;
        }

        function removeColumn(button) {
            const row = button.closest('.row');
            row.remove();
        }
    </script>
}
